trait Data {
    -{
     Pure data approach
    }

    data (~>) (f:type->type) (g:type->type) {
        transform: forall a. f a -> g a
    }

    -- Implementation
    sig option_of_try : Try ~> Option
    def option_of_try = (~>) {
        transform t =
            when t
            is Failure -> None
            is Success -> Some t.value
    }

    -{
     Example:
     ```
     Success 1 transform option_of_try
     ```
    }

}

trait Trait {
    -{
     Trait approach
    }

    trait (~>) (f:type->type) (g:type->type) {
        sig transform: forall a. self -> g a for f a
    }

    -- Implementation

    impl (~>) Try Option {
        def transform =
            when self
            is Failure -> None
            is Success -> Some self.value
    }

    -{
     Example:
     ```
     Success 1 transform
     ```

     a `Try ~> Option` implementation should be in the context
    }
}