impl control

type Option a =
  data None
| data Some { value : a }

impl for Option a {
    sig fold : self -> (None -> b) -> (Some a -> b) -> b

    def None.fold n _ = n self
    def Some.fold _ s = s self
}

impl Monad Option {
    def pure a = Some a

    def None.<*> a = None
    def Some.<*> a = a map self.value

    def None.flatten = None
    def Some.flatten = self.value
}
