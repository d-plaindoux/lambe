data True
data False
type Bool = True | False

impl Bool {
    sig fold : forall b. self -> (True -> b) -> (False -> b) -> b
    sig (&&) : self -> self
    sig (||) : self -> self

    def fold t f =
        when self
        is True -> t self
        is False -> f self

    def (&&) b = self fold { b } id
    def (||) b = self fold id { b }
}
