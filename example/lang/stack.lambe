impl list
impl option
impl exception

data Stack a {
    value : List a
}

data StackUnderFlow

impl for Stack a {
    sig new  : self
    sig push : self -> a -> self
    sig peek : self -> Option a
    sig pop  : self -> self with Exception StackUnderFlow

    def new = Stack $ List empty
    def push a = self with value = a :: self.value
    def peek = self value fold { None } { Some $1.head }
    def pop = self with value = self value fold { raise StackUnderFlow } { $1 tail }
}
