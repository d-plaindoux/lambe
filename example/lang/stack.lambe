impl list
impl option
impl exception

data Stack a {
    v : List a
}

data StackUnderFlow

impl for Stack a {
    sig new  : self
    sig push : self -> a -> self
    sig peek : self -> Option a
    sig pop  : self -> self with Exception StackUnderFlow // Requires raise implementation

    def new    = Stack $ List empty
    def push a = self with v = (a :: self.v)
    def peek   = self v fold { None } Some
    def pop    = self with v = (self v fold { raise StackUnderFlow } { $1 tail })
}
