use lang.product
use program

data Pure
data Impure
type Purity = Pure | Impure

trait Foldable self for s {
    sig fold : forall a. self -> (Pure -> a) -> (Impure -> a) -> a
}

impl Foldable for Pure {
    def fold p _ = p self
}

impl Foldable for Impure {
    def fold _ i = i self
}

impl Foldable Purity
    with Foldable Pure
    with Foldable Impure

type Parsed = Program * Purity

trait Analyse for Program {
    sig optimise : self -> self
    sig purity   : self -> Purity
}
