impl lang.bool
impl stream

data Rejected s { stream : Stream s; consumed : bool}
data Accepted a s { value : a; stream : Stream s; consumed : bool }
type Response a s = Rejected s | Accepted a s

impl forall a s. Response a s {
    sig fold : forall b. self -> (Rejected s -> b) -> (Accepted a s -> b) -> b

    def fold r a =
        when self
        is Rejected -> r self
        is Accepted -> a self
}

