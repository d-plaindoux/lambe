module data.list.control

from data.list import *

from control.functor import *
from control.applicative import *
from control.monad import *

define Functor List {
  def pure a = (a::Nil)
  def fmap f (h::t) = (f h)::(fmap f t)
  def fmap f Nil    = Nil
}

define Applicative List {
  def (<*>) (h::t) l = fmap h l + $ t <*> l
  def (<*>) Nil    _ = Nil
}

define Monad List {
  def join (h::t) = h + (join t)
  def join Nil    = Nil
}
