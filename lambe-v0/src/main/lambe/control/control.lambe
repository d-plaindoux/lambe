module control.control

trait Functor (m:type->type) (a) for m a {
  def (b) map : (a -> b) -> m b
}

trait Applicative (m:type->type) (a) (b) for m (a -> b) {
  def (<*>) : m a -> m b
}

trait Monad (m:type->type) (a) for m a {
  def (b) (>>=) : (a -> m b) -> m b
}

