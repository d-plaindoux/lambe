module control.free

data Free : (type -> type) -> type -> type
data Pure : [a] a -> Free f a
data Roll : [a,f:type->type] f (Free f a) -> Free f a

define [f:type->type] Functor (Free f) with Functor f {
    def fmap f (Pure a) = Pure $ f a
    def fmap f (Roll x) = Roll $ fmap x $ fmap f
}
