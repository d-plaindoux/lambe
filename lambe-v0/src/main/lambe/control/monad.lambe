module control.monad

from control.function import *
from control.applicative import *

trait Monad (m:type->type) with Applicative m {
    def (>>=) : [a,b] (a -> m b) -> m a -> m b
    def join  : [a] m (m a) -> m a
}

define [m:type -> type] Monad m {
    def (>>=) f x = fmap f x |> join
}
